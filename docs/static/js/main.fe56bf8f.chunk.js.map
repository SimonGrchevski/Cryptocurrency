{"version":3,"sources":["img.jpg","Components/CryptoValue.js","win.png","Components/HighestJump.js","Components/Header.js","Components/Breakdown.js","Components/MainPage.js","Components/CurrencyDetail.js","Components/Detail.js","Components/Details.js","redux/reducers/cryptoReducers.js","App.js","redux/configureStore.js","index.js"],"names":["CryptoValue","props","name","price","classList","className","src","img","alt","HighestJump","percent","rank","win","Header","history","useHistory","handleClick","goBack","currentView","role","onClick","onKeyPress","e","keyCode","handleKey","tabIndex","Breakdown","text","getHighest","state","length","highest","sort","a","b","percent_change_24h","price_usd","MainPage","useSelector","value","rows","col","crypto","map","elem","cl","to","CurrencyDetail","detail","details","Object","entries","key","Detail","Details","path","render","loadCrypto","createAsyncThunk","fetch","method","result","json","res","data","createSlice","initialState","reducers","extraReducers","builder","addCase","fulfilled","action","payload","reducer","combineReducers","App","dispatch","useDispatch","useEffect","basename","exact","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe56bf8f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/img.24c65156.jpg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport img from '../img.jpg';\n\nconst CryptoValue = (props) => {\n  const { name, price, classList } = props;\n  return (\n    <section className={classList}>\n      <div className=\"image-wrapper\">\n        <img\n          className=\"crypto-image\"\n          src={img}\n          alt=\"\n              a crypto value\"\n        />\n      </div>\n      <div className=\"crypto-value\">\n        <h3 className=\"txt-bold crypto-value-name\">\n          {name}\n          {' '}\n        </h3>\n        <p>\n          {`${price} USD`}\n          {' '}\n        </p>\n      </div>\n    </section>\n  );\n};\n\nCryptoValue.propTypes = {\n  name: PropTypes.string.isRequired,\n  price: PropTypes.string.isRequired,\n  classList: PropTypes.string.isRequired,\n};\n\nexport default CryptoValue;\n","export default __webpack_public_path__ + \"static/media/win.cc259dd4.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport win from '../win.png';\n\nconst HighestJump = (props) => {\n  const {\n    name, percent, price, rank,\n  } = props;\n  return (\n    <section className=\"highest-jump bg-blue\">\n      <div>\n        <img className=\"highest-img\" src={win} alt=\"crypto\" />\n      </div>\n      <div className=\"highest-info\">\n        <h3>Highest jump of the day</h3>\n        <p>\n          name:\n          {' '}\n          <span className=\"txt-bold\">\n            {name}\n          </span>\n        </p>\n        <p>\n          Jump:\n          {' '}\n          <span className=\"txt-bold\">\n            {percent}\n            %\n          </span>\n          {' '}\n        </p>\n        <p>\n          Current price:\n          {' '}\n          <span className=\"txt-bold\">\n            $\n            {price}\n            {' '}\n          </span>\n        </p>\n        <p>\n          Current rank:\n          {' '}\n          <span className=\"txt-bold\">\n            {rank}\n          </span>\n        </p>\n      </div>\n    </section>\n  );\n};\n\nHighestJump.propTypes = {\n  name: PropTypes.string.isRequired,\n  percent: PropTypes.string.isRequired,\n  price: PropTypes.string.isRequired,\n  rank: PropTypes.number.isRequired,\n};\nexport default HighestJump;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport MicIcon from '@material-ui/icons/Mic';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport { useHistory } from 'react-router';\n\nconst Header = (props) => {\n  const history = useHistory();\n\n  const handleClick = () => {\n    history.goBack();\n  };\n\n  const handleKey = (e) => {\n    if (e.keyCode === 8) { handleClick(); }\n  };\n\n  const { currentView } = props;\n  return (\n    <div className=\"header\">\n      <div className=\"header-button\">\n        <div\n          className=\"back-btn\"\n          role=\"button\"\n          onClick={() => handleClick()}\n          onKeyPress={(e) => handleKey(e)}\n          tabIndex=\"0\"\n        >\n          <ArrowBackIosIcon />\n        </div>\n        <div className=\"header-year\"><p>2021</p></div>\n      </div>\n      <div className=\"header-current-view\">\n        {currentView}\n      </div>\n      <div className=\"header-options\">\n        <MicIcon />\n        <SettingsIcon />\n      </div>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  currentView: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Breakdown = (props) => {\n  const { text } = props;\n  return (\n    <div className=\"breakdown bg-dark-blue\">\n      <p>{text}</p>\n    </div>\n  );\n};\n\nBreakdown.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n\nexport default Breakdown;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport CryptoValue from './CryptoValue';\nimport HighestJump from './HighestJump';\nimport Header from './Header';\nimport Breakdown from './Breakdown';\n\nconst getHighest = (state) => {\n  if (state.length) {\n    const highest = [...state].sort((a, b) => (\n      +b.percent_change_24h - +a.percent_change_24h))[0];\n    return (\n      <HighestJump\n        name={highest.name}\n        percent={highest.percent_change_24h}\n        price={highest.price_usd}\n        rank={highest.rank}\n      />\n    );\n  }\n  return <></>;\n};\n\nconst MainPage = () => {\n  const state = useSelector((state) => state.value);\n  // UGLY CODE INCOMING!\n  let rows = 0;\n  let col = 0;\n  const crypto = state.map((elem) => {\n    let cl = '';\n    if (col >= 2) {\n      col = 0;\n      rows += 1;\n    }\n    if ((rows + col) % 2 === 0) cl = 'crypto-value-wrapper crypto-main bg-dark-blue';\n    else cl = 'crypto-value-wrapper crypto-main bg-blue';\n    col += 1;\n    // NOT DEAD YET?\n    return (\n      <li key={elem.name}>\n        <Link to={`/${elem.name}`}>\n          <CryptoValue name={elem.name} price={elem.price_usd} classList={cl} />\n        </Link>\n      </li>\n    );\n  });\n\n  return (\n    <section>\n      <Header currentView=\"Top ranked crypto values\" />\n      {getHighest(state)}\n      <Breakdown text=\"Stats by rank\" />\n      <ul className=\"crypto-ul\">\n        {crypto}\n      </ul>\n    </section>\n  );\n};\n\nexport default MainPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst CurrencyDetail = (props) => {\n  const { detail } = props;\n  const details = Object.entries(detail).map(([key, value]) => (\n    <li key={key}>\n      <div className=\"currency-detail-wrapper\">\n        <div>\n          <p className=\"crypto-name\">\n            {key}\n            {' '}\n          </p>\n        </div>\n        <div>\n          {value}\n          {' '}\n        </div>\n      </div>\n    </li>\n  ));\n  return (\n    <ul className=\"currency-detail-ul\">\n      {details}\n    </ul>\n  );\n};\n\nCurrencyDetail.propTypes = {\n  detail: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    symbol: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    nameid: PropTypes.string.isRequired,\n    rank: PropTypes.number.isRequired,\n    price_usd: PropTypes.string.isRequired,\n    percent_change_24h: PropTypes.string.isRequired,\n    percent_change_1h: PropTypes.string.isRequired,\n    percent_change_7d: PropTypes.string.isRequired,\n    price_btc: PropTypes.string.isRequired,\n    market_cap_usd: PropTypes.string.isRequired,\n    volume24: PropTypes.number.isRequired,\n    volume24a: PropTypes.number.isRequired,\n    csupply: PropTypes.string.isRequired,\n    tsupply: PropTypes.string.isRequired,\n    msupply: PropTypes.string.isRequired,\n  }).isRequired,\n};\nexport default CurrencyDetail;\n","/* eslint camelcase: [\"error\", {properties: \"never\"}] */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport CryptoValue from './CryptoValue';\nimport CurrencyDetail from './CurrencyDetail';\nimport Header from './Header';\nimport Breakdown from './Breakdown';\n\nconst Detail = (props) => {\n  const { detail } = props;\n  const { name, price_usd: price } = detail;\n\n  return (\n    <div>\n      <Header currentView={`${name} view`} />\n      <CryptoValue name={name} price={price} classList=\"crypto-value-wrapper bg-blue\" />\n      <Breakdown text={`${name} breakdown`} />\n      <CurrencyDetail detail={detail} />\n    </div>\n  );\n};\n\nDetail.propTypes = {\n  detail: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    symbol: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    nameid: PropTypes.string.isRequired,\n    rank: PropTypes.number.isRequired,\n    price_usd: PropTypes.string.isRequired,\n    percent_change_24h: PropTypes.string.isRequired,\n    percent_change_1h: PropTypes.string.isRequired,\n    percent_change_7d: PropTypes.string.isRequired,\n    price_btc: PropTypes.string.isRequired,\n    market_cap_usd: PropTypes.string.isRequired,\n    volume24: PropTypes.number.isRequired,\n    volume24a: PropTypes.number.isRequired,\n    csupply: PropTypes.string.isRequired,\n    tsupply: PropTypes.string.isRequired,\n    msupply: PropTypes.string.isRequired,\n  }).isRequired,\n};\nexport default Detail;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport Detail from './Detail';\n\n// CryptoValue should have an bool prop so you can change from row to col\n// every detail is wrapped in a component.\n// should loop thru the data  and create detail section\n// for every obj\nconst Details = () => {\n  const state = useSelector((state) => state.value);\n  const details = state.map((elem) => (\n    <Route path={`/${elem.name}`} key={elem.name} render={() => <Detail detail={elem} />} />\n  ));\n  return (\n    <Switch>\n      {details}\n    </Switch>\n  );\n};\n\nexport default Details;\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\n\nconst loadCrypto = createAsyncThunk('fetchData',\n  async () => {\n    const result = await fetch('https://api.coinlore.net/api/tickers/?start=0&limit=10', { method: 'GET' });\n    const res = await result.json();\n    // console.log(res);\n    return res.data;\n  });\n\nconst crypto = createSlice({\n  name: 'values',\n  initialState: [],\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(loadCrypto.fulfilled, (state, action) => action.payload);\n  },\n});\n\nconst reducer = combineReducers({\n  value: crypto.reducer,\n});\n\nexport { reducer, loadCrypto };\n","import React, { useEffect } from 'react';\nimport './App.css';\nimport { useDispatch } from 'react-redux';\nimport { Switch, Route, HashRouter as Router } from 'react-router-dom';\nimport MainPage from './Components/MainPage';\nimport Details from './Components/Details';\nimport { loadCrypto } from './redux/reducers/cryptoReducers';\n\nfunction App() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(loadCrypto());\n  }, []);\n\n  return (\n    <div>\n      <Router basename=\"/\">\n        <Switch>\n          <Route exact path=\"/\">\n            <MainPage />\n          </Route>\n        </Switch>\n        <Details />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { reducer } from './reducers/cryptoReducers';\n\nconst store = createStore(reducer, applyMiddleware(thunk));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/configureStore';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}